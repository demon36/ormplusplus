//this creates primary keys in the sqlite way
void MySQLSession::createTable(const string& name, const TableSchema& schema){
	stringstream queryStream;
	queryStream << "CREATE TABLE IF NOT EXISTS `"<< name <<"`(";
	std::vector<TableColumn> columnsList;
	for(auto& columnEntry : schema ) {
		columnsList.push_back( columnEntry.second );
	}

	string primaryKeys;
	for(int i = 0; i < columnsList.size(); i++){
		if(columnsList[i].isPrimary()){
			if(!primaryKeys.empty()){
				primaryKeys += ",";
			}
			primaryKeys += columnsList[i].getName();
		}
		queryStream << "`"<< columnsList[i].getName() <<"` " <<  columnsList[i].getDBTypeName();
		if(columnsList[i].isText()){
			queryStream << "(" << columnsList[i].getLength() << ")";
		}
		if(i < columnsList.size()-1){
			queryStream << ", ";
		}
	}

	if(!primaryKeys.empty()){
		queryStream << " PRIMARY KEY (`" << primaryKeys << "`) ";
	}
	queryStream << ");";

	execute(queryStream.str());
}